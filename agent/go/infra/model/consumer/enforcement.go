// Package models provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen version v1.16.2 DO NOT EDIT.
package models

import (
	externalRef0 "agentless/infra/model/common"
)

// Defines values for CriterionType.
const (
	Hostname      CriterionType = "hostname"
	Platform      CriterionType = "platform"
	Region        CriterionType = "region"
	ResourceGroup CriterionType = "resource_group"
	ResourceType  CriterionType = "resource_type"
	ServiceTag    CriterionType = "service_tag"
	Subnet        CriterionType = "subnet"
	Subscription  CriterionType = "subscription"
	Tag           CriterionType = "tag"
	Vnet          CriterionType = "vnet"
)

// Defines values for IcmpMatchVer.
const (
	N4 IcmpMatchVer = 4
	N6 IcmpMatchVer = 6
)

// Defines values for LabelCriterionOp.
const (
	Contains   LabelCriterionOp = "contains"
	EndsWith   LabelCriterionOp = "ends-with"
	Equals     LabelCriterionOp = "equals"
	Regex      LabelCriterionOp = "regex"
	StartsWith LabelCriterionOp = "starts-with"
	Wildcards  LabelCriterionOp = "wildcards"
)

// Defines values for PolicyChainChainName.
const (
	PolicyChainChainNameAlert         PolicyChainChainName = "alert"
	PolicyChainChainNameAllow         PolicyChainChainName = "allow"
	PolicyChainChainNameBlock         PolicyChainChainName = "block"
	PolicyChainChainNameOverrideAlert PolicyChainChainName = "override-alert"
	PolicyChainChainNameOverrideAllow PolicyChainChainName = "override-allow"
	PolicyChainChainNameOverrideBlock PolicyChainChainName = "override-block"
)

// Defines values for PolicyRuleProtocols.
const (
	All  PolicyRuleProtocols = "all"
	Icmp PolicyRuleProtocols = "icmp"
	Tcp  PolicyRuleProtocols = "tcp"
	Udp  PolicyRuleProtocols = "udp"
)

// Defines values for PolicyRuleVerdict.
const (
	PolicyRuleVerdictAllow PolicyRuleVerdict = "allow"
	PolicyRuleVerdictBlock PolicyRuleVerdict = "block"
)

// Defines values for PostV1ConsumerInventoryParamsAction.
const (
	PostV1ConsumerInventoryParamsActionSet    PostV1ConsumerInventoryParamsAction = "set"
	PostV1ConsumerInventoryParamsActionUpdate PostV1ConsumerInventoryParamsAction = "update"
)

// Defines values for PostV1ConsumerPolicyParamsAction.
const (
	PostV1ConsumerPolicyParamsActionSet    PostV1ConsumerPolicyParamsAction = "set"
	PostV1ConsumerPolicyParamsActionUpdate PostV1ConsumerPolicyParamsAction = "update"
)

// CompoundLabel defines model for CompoundLabel.
type CompoundLabel struct {
	ExcludeLabels *[][]string `json:"exclude-labels,omitempty"`
	IncludeLabels [][]string  `json:"include-labels"`
}

// CriterionType defines model for CriterionType.
type CriterionType string

// DCInventoryItem defines model for DCInventoryItem.
type DCInventoryItem struct {
	ExternalId  *string   `json:"external-id,omitempty"`
	IpAddresses *[]string `json:"ip-addresses,omitempty"`
	ItemId      string    `json:"item-id"`
}

// DomainGroupMatch defines model for DomainGroupMatch.
type DomainGroupMatch struct {
	DomainName string `json:"domain-name"`
	Gname      string `json:"gname"`
	Sid        string `json:"sid"`
}

// EnforcementPolicy defines model for EnforcementPolicy.
type EnforcementPolicy struct {
	PolicyEntity   *string        `json:"policy-entity,omitempty"`
	PolicyRevision int64          `json:"policy-revision"`
	PolicyRules    *[]PolicyChain `json:"policy-rules,omitempty"`
}

// EnforcementPolicyInventory defines model for EnforcementPolicyInventory.
type EnforcementPolicyInventory struct {
	DcInventoryRevision int64              `json:"dc-inventory-revision"`
	InventoryItems      *[]DCInventoryItem `json:"inventory-items,omitempty"`

	// Labels Array of all the labels.
	Labels         *[]LabelInfo `json:"labels,omitempty"`
	PolicyRevision int64        `json:"policy-revision"`
}

// EntityMatch defines model for EntityMatch.
type EntityMatch struct {
	MatchDnsList         *[]string          `json:"match-dns-list,omitempty"`
	MatchGroups          *GroupMatch        `json:"match-groups,omitempty"`
	MatchIcmpTypes       *[]IcmpMatch       `json:"match-icmp-types,omitempty"`
	MatchInventoryItems  *[]string          `json:"match-inventory-items,omitempty"`
	MatchLabels          *CompoundLabel     `json:"match-labels,omitempty"`
	MatchMultipleSubnets *[]string          `json:"match-multiple-subnets,omitempty"`
	MatchPortRanges      *[]PortRangeMatch  `json:"match-port-ranges,omitempty"`
	MatchPorts           *[]int32           `json:"match-ports,omitempty"`
	MatchProcesses       *[]ProcessMatch    `json:"match-processes,omitempty"`
	MatchWinAnyServices  *bool              `json:"match-win-any-services,omitempty"`
	MatchWinServices     *[]WinServiceMatch `json:"match-win-services,omitempty"`
}

// GroupMatch defines model for GroupMatch.
type GroupMatch struct {
	DomainGroups *[]DomainGroupMatch `json:"domain-groups,omitempty"`
	LocalAdmins  *bool               `json:"local-admins,omitempty"`
	LocalUsers   *bool               `json:"local-users,omitempty"`
}

// IcmpMatch defines model for IcmpMatch.
type IcmpMatch struct {
	Codes *[]int32     `json:"codes,omitempty"`
	Type  int32        `json:"type"`
	Ver   IcmpMatchVer `json:"ver"`
}

// IcmpMatchVer defines model for IcmpMatch.Ver.
type IcmpMatchVer int

// LabelCriterion defines model for LabelCriterion.
type LabelCriterion struct {
	Argument   string                 `json:"argument"`
	Op         LabelCriterionOp       `json:"op"`
	Resolvable externalRef0.Connector `json:"resolvable"`
	Type       CriterionType          `json:"type"`
}

// LabelCriterionOp defines model for LabelCriterion.Op.
type LabelCriterionOp string

// LabelInfo defines model for LabelInfo.
type LabelInfo struct {
	Key           *string           `json:"key,omitempty"`
	LabelCriteria *[]LabelCriterion `json:"label-criteria,omitempty"`
	LabelId       string            `json:"label-id"`

	// LabeledItems The list of asset ids that belong to this label. Asset ids must exist provider the inventory-items array.
	LabeledItems *[]string `json:"labeled-items,omitempty"`
	Value        *string   `json:"value,omitempty"`
}

// PolicyChain defines model for PolicyChain.
type PolicyChain struct {
	ChainName PolicyChainChainName `json:"chain-name"`
	Rules     []PolicyRule         `json:"rules"`
}

// PolicyChainChainName defines model for PolicyChain.ChainName.
type PolicyChainChainName string

// PolicyRule defines model for PolicyRule.
type PolicyRule struct {
	Id        string                `json:"id"`
	MatchDst  EntityMatch           `json:"match-dst"`
	MatchSrc  EntityMatch           `json:"match-src"`
	Protocols []PolicyRuleProtocols `json:"protocols"`
	Verdict   PolicyRuleVerdict     `json:"verdict"`
}

// PolicyRuleProtocols defines model for PolicyRule.Protocols.
type PolicyRuleProtocols string

// PolicyRuleVerdict defines model for PolicyRule.Verdict.
type PolicyRuleVerdict string

// PortRangeMatch defines model for PortRangeMatch.
type PortRangeMatch struct {
	End   int32 `json:"end"`
	Start int32 `json:"start"`
}

// ProcessMatch defines model for ProcessMatch.
type ProcessMatch struct {
	ImageBasename *string `json:"image-basename,omitempty"`
	ImagePath     *string `json:"image-path,omitempty"`
}

// WinServiceMatch defines model for WinServiceMatch.
type WinServiceMatch struct {
	ServiceImageNames *[]string `json:"service-image-names,omitempty"`
	ServiceName       *string   `json:"service-name,omitempty"`
}

// PostV1ConsumerInventoryParams defines parameters for PostV1ConsumerInventory.
type PostV1ConsumerInventoryParams struct {
	Action *PostV1ConsumerInventoryParamsAction `form:"action,omitempty" json:"action,omitempty"`
}

// PostV1ConsumerInventoryParamsAction defines parameters for PostV1ConsumerInventory.
type PostV1ConsumerInventoryParamsAction string

// PostV1ConsumerPolicyParams defines parameters for PostV1ConsumerPolicy.
type PostV1ConsumerPolicyParams struct {
	Action *PostV1ConsumerPolicyParamsAction `form:"action,omitempty" json:"action,omitempty"`
}

// PostV1ConsumerPolicyParamsAction defines parameters for PostV1ConsumerPolicy.
type PostV1ConsumerPolicyParamsAction string

// PostV1ConsumerInventoryJSONRequestBody defines body for PostV1ConsumerInventory for application/json ContentType.
type PostV1ConsumerInventoryJSONRequestBody = EnforcementPolicyInventory

// PostV1ConsumerPolicyJSONRequestBody defines body for PostV1ConsumerPolicy for application/json ContentType.
type PostV1ConsumerPolicyJSONRequestBody = EnforcementPolicy
